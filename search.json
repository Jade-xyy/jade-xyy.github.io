[{"title":"markdown常用语法备忘","url":"/2025/04/02/markdown常用语法备忘/","content":"# 一级标题 缩略栏是居中的大标题\n## 二级标题 二级好看，用二级当一级\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n####### 没有七级，七级是正文  \n```text\n# 一级标题 缩略栏是居中的大标题\n## 二级标题 二级好看，用二级当一级\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n####### 没有七级，七级是正文 \n```\n1. 有序列表一\n2. 有序列表二\n```text\n1. 有序列表一\n2. 有序列表二\n```\n- 无序列表\n- 无序列表\n+ test3\n+ test4\n* test5\n* test6\n```text\n- 无序列表\n- 无序列表\n+ test3\n+ test4\n* test5\n* test6\n```\n---\n```text\n分割线\n---\n```\n> 引用\n```text\n> 引用\n```\n[行内式链接](https:fay.net.cn)  \n[参数式链接]: https://fay.net.cn  \n![本地头像](./reimu.png)\n```text\n[行内式链接](https:fay.net.cn)  \n[参数式链接]: https://fay.net.cn  \n![本地头像](./reimu.png)\n```\n| name | desc |\n|:------:|------|\n| a | b |\n```text\n| name | desc |\n|:------:|------|\n| a | b |\n```\n_斜体_  \n__粗体__  \n___粗斜体___  \n\\*反斜杠转义\n~~删除线~~\n<u>下划线</u>\n脚注[^1]\n[^1]: 脚注1内容\n```text\n_斜体_  \n__粗体__  \n___粗斜体___  \n\\*反斜杠转义\n~~删除线~~\n<u>下划线</u>\n脚注[^1]\n[^1]: 脚注1内容\n```\n```c++\nclass Solution {\npublic:\n    vectio<int> res,left,right;\n}\n```"},{"title":"博客搭建hexo+github+个人域名","url":"/2025/03/27/博客搭建hexo-github-个人域名/","content":"\n## 安装nodejs\n- __下载__\n[nodejs官网]: https://nodejs.org/en/download/\n根据电脑系统、架构下载对应版本\n- __安装__\n解压后安装，除安装地址外、其他选项默认即可\n检查是否安装成功：\n【win+r】输入【cmd】回车（打开命令行）\n![](博客搭建hexo-github-个人域名/win_r-cmd.png)\n```bash\n# 如无信息可到cd到对应安装目录执行\nnode -v\n```\n如下输出版本号即安装成功\n![](博客搭建hexo-github-个人域名/nodejs_version.png)\n- __配置环境__\n1. 到nodejs安装目录下，和node.exe同级，新建两个文件夹【node_global】和【node_cache】\n2. 以管理员身份运行cmd\n```bash\nnpm config set prefix \"刚刚创建的node_global路径\"\nnpm config set cache \"刚刚创建的node_cache路径\"\n```\n3. 配置系统环境变量\n【win+r】输入【sysdm.cpl】回车（打开系统属性）\n【系统属性】-【高级】-【环境变量】-【系统变量】-【Path】-【新建】\n```yaml\n变量名：NODE_PATH\n变量值：D:\\develop\\nodejs\\node_global\\node_modules\n```\n配置后【node_global】下会自动生成【node_modules】，如未出现，手动创建\n4. 配置用户环境变量\n【win+r】输入【sysdm.cpl】回车（打开系统属性）\n【系统属性】-【高级】-【环境变量】-【用户变量】-【Path】-【编辑】\n将原本的默认【C:\\Users\\哔\\AppData\\Roaming\\npm】修改为【node_global】的绝对路径\n5. 配置系统环境变量\n【系统变量】-【Path】-【编辑】\n【新建】-输入【%NODE_PATH%】-确认\n6. 测试\n以管理员身份运行cmd\n```bash\n# 检查是否正常输出刚才配置的路径\nnpm config get prefix\nnpm config get cache\n# 全局安装一个最常用的express模块测试\nnpm install express -g # -g代表全局安装\n```\n## 安装git\n- __下载安装__\n[git国内官网]: https://git-scm.com/\n根据电脑系统、架构下载对应版本，安装\n- __检查__\n```bash\ngit --version\n# 输出对应版本号则为安装成功\n# 在桌面或任意文件夹内右键会多两个选项：【Git GUI Here】【Git Bash Here】\n```\n## 安装hexo\n- __下载安装__\n创建文件夹，日后博客相关文件都会保存在此，例【d:\\develop\\hexo】，然后进入hexo目录，【右键】-【Git Bash Here】\n```bash\nnpm install hexo-cli -g\nnpm install hexo-deployer-git --save\n# 初始化hexo\nhexo init\n```\n== 后边的命令默认在hexo文件夹下执行 ==\n- __更换喜欢的主题__\n[hexo主题官网点击此处：Themes | Hexo](https://hexo.io/themes/)\n找到喜欢的主题，git clone到theme下\n修改外层【_config.yml】中的theme值为刚刚克隆的主题文件夹名，我这里用的主题是[hexo-theme-reimu](https://github.com/D-Sketon/hexo-theme-reimu)  \n```yaml\ntheme: reimu\n```\n- __本地运行__\n```bash\n# 启动\nhexo clean & hexo g & hexo server\n# 访问4000端口，发现已生成博客\nhttp://localhost:4000\n```\n## 将本地博客部署到GitHubPages\n1. 注册登录github账号，根据官网指引绑定ssh秘钥，在github中添加公钥\n2. github创建仓库，仓库名格式一定为\"用户名.github.io\"，后期访问需要通过这个域名访问，设置公开仓库\n![](博客搭建hexo-github-个人域名/github_repo_create.png)\n3. 配置github仓库地址到config里\n复制ssh的git地址\n![](博客搭建hexo-github-个人域名/git_clone.png)\n修改外层【_config.yml】里的deploy下的字段\n![](博客搭建hexo-github-个人域名/config_deploy.png)\n4. 部署到github\n```bash\nnpm install hexo-deployer-git --save\nhexo g -d\n```\n5. 访问博客地址\n```yaml\nhttps://自己的用户名.github.io\n```\n比如我的是(https://jade-xyy.github.io)\n## 写文章\nhexo下的【source\\_posts】文件夹是用来保存文章的\n```bash\n# 生成新文章\nhexo new post \"文章标题\"\n# 找到对应文章的md文件，用markdown语法编辑文章后发布，重新访问即可看到\nhexo g # 生成网页\nhexo s # 本地预览\nhexo d # 推送到服务器\n```\n## 绑定个人的私有域名\n- __首先需要购入一个私有域名__\n我是在阿里云购买的域名\n- __配置dns解析__\n配置5条记录\n```yml\n1条【CNAME】的，主机记录 www ，记录值填上边的github访问地址（自己的用户名.github.io）\n4条【A】的，主机记录 @ ，记录值为以下\n185.199.108.153\n185.199.109.153\n185.199.110.153\n185.199.111.153\n```\n- __创建域名跳转文件__\n在仓库根目录下，创建CNAME文件，内容为购买的域名，例如我自己的\n![](博客搭建hexo-github-个人域名/github_cname.png)\n到github仓库的【Settings】-【Pages】中，配置域名\n![](博客搭建hexo-github-个人域名/github_setting.png)\n另外还得在 /source 下创建CNAME文件，防止hexo clean时，public下的CNAME被覆盖消失\n![](博客搭建hexo-github-个人域名/source_cname.png)\n__访问个人域名，全部完成！！！__"},{"title":"Hello World","url":"/2025/03/24/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]